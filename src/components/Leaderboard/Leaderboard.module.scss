@use '@styles/breakpoints.module';
@use '@styles/functions';
@use '@styles/mixins';
@use '@components/Avatar/sizes.module' as avatar-sizes;

.wrapper {
  position: relative;

  &::before,
  &::after {
    background: linear-gradient(
      rgb(var(--color-shadow) 0.75),
      rgb(var(--color-shadow) 0)
    );
    content: '';
    display: block;
    height: functions.spacing(0.5);
    margin-top: functions.spacing(-0.5);
    opacity: 0;
    position: sticky;
    width: 100%;
    z-index: 2;
  }

  &::before {
    top: 0;

    [data-overflow-top='true'] & {
      opacity: 1;
    }
  }

  &::after {
    bottom: 0;
    transform: scaleY(-1);

    [data-overflow-bottom='true'] & {
      opacity: 1;
    }
  }
}

.row {
  --row-background: var(--color-background-odd);

  color: var(--color-text);
  display: grid;
  gap: 1px 0;
  grid-template:
    'avatar heading' auto
    '. columns' auto
    / auto 1fr;
  height: auto !important;
  line-height: 1.2;

  & + & {
    border-top: 1px solid transparent;
  }

  &.even {
    --row-background: var(--color-background-even);
  }

  &:hover {
    --row-background: var(--color-background-inverted);

    color: var(--color-text-inverted);
  }

  @include mixins.mq(breakpoints.$tablet-landscape) {
    grid-template: 'avatar heading columns' / auto 40% 1fr;
  }
}

.avatar {
  grid-area: avatar;
  max-width: avatar-sizes.$small-rem;
  position: sticky;
  top: 0;

  @include mixins.mq(breakpoints.$tablet-landscape) {
    max-width: none;
  }
}

.headings {
  background: var(--row-background);
  grid-area: heading;
}

.heading {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 100%;
  padding: functions.spacing(0.5);

  @include mixins.mq(breakpoints.$tablet-landscape) {
    min-height: 75px;
    padding-inline: functions.spacing(1);
    position: sticky;
    top: 0;
  }
}

.columns {
  align-items: center;
  background: var(--row-background);
  display: flex;
  flex-wrap: wrap;
  gap: functions.spacing(0.5) functions.spacing(1);
  grid-area: columns;
  padding: functions.spacing(0.5);

  &:empty {
    padding: 0;
  }

  @include mixins.mq(breakpoints.$tablet-landscape) {
    padding-inline: functions.spacing(1);
    justify-content: end;
  }
}

.column {
  flex: 1 1 0;
  white-space: nowrap;

  &[data-label] {
    position: relative;

    &::before {
      color: var(--color-muted);
      content: attr(data-label);
      display: block;
      font-size: x-small;
      line-height: 1;
      text-transform: uppercase;

      .row:hover & {
        color: var(--color-muted-inverted);
      }
    }
  }

  @include mixins.mq(breakpoints.$tablet-landscape) {
    max-width: 25%;
    text-align: right;
  }
}

.link {
  border-bottom: 1px solid transparent;
  color: currentColor;
  display: inline-block;
  text-decoration: none;

  &[href]:focus,
  &[href]:hover {
    border-color: var(--color-highlight);
    color: var(--color-text-inverted);
  }
}

.date {
  color: var(--color-muted);
  display: block;
  font-size: smaller;
  font-variant-numeric: tabular-nums;
  line-height: 1;

  .row:hover & {
    color: var(--color-muted-inverted);
  }
}
